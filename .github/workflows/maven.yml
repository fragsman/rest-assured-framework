# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# The first job build, execute the test and upload the result as an artifact. The artifact is the output of job.
# The second job generate the report and depends on the first job. Note that upload-artifact name matches with download-artifact name.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{steps.upload-artifact.outputs.artifact-name}}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Current possible values for env=[GITHUB,QA]
    - name: Test with Maven
      continue-on-error: true
      run: mvn clean -Denv=GITHUB test

    - name: Upload tests results (to be used by Linux)
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results-windows
        path: target/results/allure-results

  prepare-reports:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Load test report history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Download Test Results (downloaded from Windows)
      uses: actions/download-artifact@v4
      with:
        name: test-results-windows
        path: allure-results

    - name: Build test report
      uses: simple-elf/allure-report-action@v1.7
      if: always()
      with:
        gh_pages: gh-pages
        allure_history: allure-history
        allure_results: allure-results

    - name: Publish test report
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history
